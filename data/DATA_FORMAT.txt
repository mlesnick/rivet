FORMAT OF DATA FILES

I. Point Cloud (for constructing a Vietoris-Rips complex)

	First line:	the word "points"
	Second line:	dimension of data (integer)
	Third line:	maximum length of edges to be constructed (decimal)
	Other lines:	one line per point; each line contains decimal numbers, separated by white space, giving the point's coordinates and birth time
	

II. Distance Matrix with a Real-valued Function

	Suppose there are N points. The file specifies N values of the function and "distances" between all pairs of points.

	First line: 	the word "metric"
	Second line:	N values of the function, separated by white space
	Third line:	maximum length (distance) of edges to be constructed
	Lines 4 through N+2:	line i gives the distances from point (i-3) to all points (i-2) through N
				that is, line i contains (N-i+3) numbers, separated by white space

III. Bifiltration 

	NOT CURRENTLY WORKING!!!

	(Here we consider a bifiltration to be abstract, without geometric coordinates.)
	REQUIREMENTS:
		vertices are labeled 0, 1, 2, ..., N
		times and distances are nonnegative integers (preferably 0, 1, ..., max_time and 0, 1, ..., max_dist, respectively)
	The program does NOT currently check that the data file represents a logically-consistent bifiltration.
	If an n-simplex and (some of) its faces appear at the same multi-index, it is only necessary to give the n-simplex in the input file; its faces will automatically be included.
	

	First line:	the word "bifiltration"
	Other lines:	one line per simplex, each line contains numbers separated by white space:
				first number (integer) gives the dimension of the simplex (here we will call it n)
				next n+1 numbers (integers) give the vertices of the simplex
				next number (decimal) gives the time at which the simplex appears
				final number (decimal) gives the distance at which the simplex appears
	
	CAUTION: THE PROGRAM MIGHT NOT HANDLE NON-INTEGER MULTI-INDEXES YET!
	



IV. Augmented arrangement (saved from prior computation in RIVET)

	It suffices to store (1) exact values of the x- and y-grades, (2) non-zero values of xi_0 and xi_1 w.r.t. discrete coordinates, and (3) the barcode templates.
	The arrangement can then be reconstructed via the Bentley-Ottmann algorithm, and no persistence calculations are necessary.
	
	
	


