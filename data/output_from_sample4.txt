READING FILE:
  dimension of data: 2
  maximum dimension of simplices: 2
  maximum distance: 1.8
  read 4 points; input finished
SORTING POINTS BY BIRTH TIME
TESTING VECTOR:
  point 0: (0, 0) born at time 1
  point 1: (1, 0) born at time 1
  point 2: (0, 1) born at time 1
  point 3: (1, 1) born at time 2
  found 4 points
BUILDING FILTRATION
COMPUTING DISTANCES:
  distance from point 0 to point 1: 1
  distance from point 0 to point 2: 1
  distance from point 0 to point 3: 1.41421
  distance from point 1 to point 2: 1.41421
  distance from point 1 to point 3: 1
  distance from point 2 to point 3: 1
  unique distances less than 1.8: 0, 1, 1.41421, 
  unique times: 1, 2, 
BUILDING SIMPLEX TREE:
  adding node 0 as child of root 
  adding node 1 as child of 0; current_dist = 1
  adding node 2 as child of 1; current_dist = 1.41421
  adding node 3 as child of 1; current_dist = 1.41421
  adding node 2 as child of 0; current_dist = 1
  adding node 3 as child of 2; current_dist = 1.41421
  adding node 3 as child of 0; current_dist = 1.41421
  adding node 1 as child of root 
  adding node 2 as child of 1; current_dist = 1.41421
  adding node 3 as child of 2; current_dist = 1.41421
  adding node 3 as child of 1; current_dist = 1
  adding node 2 as child of root 
  adding node 3 as child of 2; current_dist = 1
  adding node 3 as child of root 
TESTING SIMPLEX TREE:
  NODE: vertex -1; global index: -1; multi-index: (-1, -1); parent: NULL; children: 0, 1, 2, 3
    NODE: vertex 0; global index: 0; multi-index: (0, 0); parent: -1; children: 1, 2, 3
      NODE: vertex 1; global index: 1; multi-index: (0, 1); parent: 0; children: 2, 3
        NODE: vertex 2; global index: 2; multi-index: (0, 2); parent: 1; children: NONE
        NODE: vertex 3; global index: 3; multi-index: (1, 2); parent: 1; children: NONE
      NODE: vertex 2; global index: 4; multi-index: (0, 1); parent: 0; children: 3
        NODE: vertex 3; global index: 5; multi-index: (1, 2); parent: 2; children: NONE
      NODE: vertex 3; global index: 6; multi-index: (1, 2); parent: 0; children: NONE
    NODE: vertex 1; global index: 7; multi-index: (0, 0); parent: -1; children: 2, 3
      NODE: vertex 2; global index: 8; multi-index: (0, 2); parent: 1; children: 3
        NODE: vertex 3; global index: 9; multi-index: (1, 2); parent: 2; children: NONE
      NODE: vertex 3; global index: 10; multi-index: (1, 1); parent: 1; children: NONE
    NODE: vertex 2; global index: 11; multi-index: (0, 0); parent: -1; children: 3
      NODE: vertex 3; global index: 12; multi-index: (1, 1); parent: 2; children: NONE
    NODE: vertex 3; global index: 13; multi-index: (1, 0); parent: -1; children: NONE
  vertex lists for each of the 14 simplices:
    simplex 0: 0, 
    simplex 1: 0, 1, 
    simplex 2: 0, 1, 2, 
    simplex 3: 0, 1, 3, 
    simplex 4: 0, 2, 
    simplex 5: 0, 2, 3, 
    simplex 6: 0, 3, 
    simplex 7: 1, 
    simplex 8: 1, 2, 
    simplex 9: 1, 2, 3, 
    simplex 10: 1, 3, 
    simplex 11: 2, 
    simplex 12: 2, 3, 
    simplex 13: 3, 
COMPUTING BOUNDARY MATRICES
  boundary matrix A:  boundary matrix for dimension 1 at index (0, 1): 
    simplices of dimension 1 at index (0, 1): 1, 4, 
    simplices of dimension 0 at index (0, 1): 0, 7, 11, 
    | 1 1 |
    | 1 0 |
    | 0 1 |
  boundary matrix B:  boundary matrix for dimension 1 at index (1, 1): 
    simplices of dimension 1 at index (1, 1): 1, 4, 10, 12, 
    simplices of dimension 0 at index (1, 1): 0, 7, 11, 13, 
    | 1 1 0 0 |
    | 1 0 1 0 |
    | 0 1 0 1 |
    | 0 0 1 1 |
  boundary matrix C:  boundary matrix for dimension 1 at index (0, 2): 
    simplices of dimension 1 at index (0, 2): 1, 4, 8, 
    simplices of dimension 0 at index (0, 2): 0, 7, 11, 
    | 1 1 0 |
    | 1 0 1 |
    | 0 1 1 |
  boundary matrix D:  boundary matrix for dimension 1 at index (1, 2): 
    simplices of dimension 1 at index (1, 2): 1, 4, 6, 8, 10, 12, 
    simplices of dimension 0 at index (1, 2): 0, 7, 11, 13, 
    | 1 1 1 0 0 0 |
    | 1 0 0 1 1 0 |
    | 0 1 0 1 0 1 |
    | 0 0 1 0 1 1 |
  boundary matrix for direct sum B+C:
    | 1 1 0 0 0 0 0 |
    | 1 0 1 0 0 0 0 |
    | 0 1 0 1 0 0 0 |
    | 0 0 1 1 0 0 0 |
    | 0 0 0 0 1 1 0 |
    | 0 0 0 0 1 0 1 |
    | 0 0 0 0 0 1 1 |
  map matrix [B+C,D]:  boundary matrix for dimension 1 at index (1, 2): 
    D: simplices of dimension 1 at index (1, 2): 1, 4, 6, 8, 10, 12, 
    C: simplices of dimension 1 at index (0, 2): 1, 4, 8, 
    B: simplices of dimension 1 at index (1, 1): 1, 4, 10, 12, 
    | 1 0 0 0 1 0 0 |
    | 0 1 0 0 0 1 0 |
    | 0 0 0 0 0 0 0 |
    | 0 0 0 0 0 0 1 |
    | 0 0 1 0 0 0 0 |
    | 0 0 0 1 0 0 0 |
  reducing boundary matrix B+C, and applying same column operations to [B+C,D]
    reduced boundary matrix B+C:
    | 1 1 0 0 0 0 0 |
    | 1 0 1 0 0 0 0 |
    | 0 1 0 0 0 0 0 |
    | 0 0 1 0 0 0 0 |
    | 0 0 0 0 1 1 0 |
    | 0 0 0 0 1 0 0 |
    | 0 0 0 0 0 1 0 |
    reduced matrix [B+C,D]:
    | 1 0 0 1 1 0 1 |
    | 0 1 0 1 0 1 1 |
    | 0 0 0 0 0 0 0 |
    | 0 0 0 0 0 0 1 |
    | 0 0 1 1 0 0 0 |
    | 0 0 0 1 0 0 0 |
    basis for [B+C,D](ker(boundary map B+C)):
    | 1 1 |
    | 1 1 |
    | 0 0 |
    | 0 1 |
    | 1 0 |
    | 1 0 |
  boundary matrix D in one dimension higher:  boundary matrix for dimension 2 at index (1, 2): 
    simplices of dimension 2 at index (1, 2): 2, 3, 5, 9, 
    simplices of dimension 1 at index (1, 2): 1, 4, 6, 8, 10, 12, 
    | 1 1 0 0 |
    | 1 0 1 0 |
    | 0 1 1 0 |
    | 1 0 0 1 |
    | 0 1 0 1 |
    | 0 0 1 1 |
  concatenating D2 with [B+C,D](ker(..)):
    | 1 1 0 0 1 1 |
    | 1 0 1 0 1 1 |
    | 0 1 1 0 0 0 |
    | 1 0 0 1 0 1 |
    | 0 1 0 1 1 0 |
    | 0 0 1 1 1 0 |
  reduced form of concatenated matrix:
    | 1 1 0 0 0 0 |
    | 1 0 1 0 0 0 |
    | 0 1 1 0 0 0 |
    | 1 0 0 0 0 0 |
    | 0 1 0 0 0 0 |
    | 0 0 1 0 0 0 |
  number of nonzero columns in right block: 0
  nullity of boundary matrix D:
    | 1 1 1 0 0 0 |
    | 1 0 0 0 0 0 |
    | 0 1 0 0 0 0 |
    | 0 0 1 0 0 0 |
    nullity is: 3
  rank of boundary matrix D2:
  boundary matrix for dimension 2 at index (1, 2): 
    simplices of dimension 2 at index (1, 2): 2, 3, 5, 9, 
    simplices of dimension 1 at index (1, 2): 1, 4, 6, 8, 10, 12, 
    | 1 1 0 0 |
    | 1 0 1 0 |
    | 0 1 1 0 |
    | 1 0 0 0 |
    | 0 1 0 0 |
    | 0 0 1 0 |
    rank is: 3
  finally: xi_0(1,2) = 0
Done.
